# 2. Представлен список чисел. Необходимо вывести элементы исходного списка,
# значения которых больше предыдущего элемента.

# list = [human for human in range(0, 240) if human % 20 == 0]
# print(list)

# 3. Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать итоговый массив чисел, соответствующих требованию.
# Элементы вывести в порядке их следования в исходном списке.
# Для выполнения задания обязательно использовать генератор.
# from itertools import groupby
#
# num = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# my_list = [el for el, _ in groupby(num)]
# print(my_list)

# 4. Реализовать формирование списка, используя функцию range() и возможности генератора.
# В список должны войти четные числа от 100 до 1000 (включая границы).
# Необходимо получить результат вычисления произведения всех элементов списка.

# from functools import reduce
#
# my_list = [i for i in range(100, 1000) if i % 2 == 0]
# reduce_all = reduce(lambda x,y: x-y, my_list)
# print(reduce_all)

# 5. Реализовать два небольших скрипта:
# а) итератор, генерирующий целые числа, начиная с указанного,
# б) итератор, повторяющий элементы некоторого списка, определенного заранее.

from itertools import count, cycle
from random import randint

my_iterrator = count(int(input('введите число')))
for i in randint(my_iterrator):
    if i > 30,
    break


# my_iterator = [el for el in cycle(int(input("ВВедите стартовое число")))]
# print(my_iterator)